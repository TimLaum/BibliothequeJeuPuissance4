<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPlateau.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA0gAAALQCAMAAACde6BzAAAABGdBTUEAALGPC/xhBQAAAUFQTFRFGlfy
        OW30ZY72gqP4n7j6vM77z9z83uf96/D+////3eb9MGfzapL3pr764en9pb36aZH2RXf0orv69Pf+8/b+
        obr6QnX0Il3ydJn30d38ytj8bJP3i6r46e/+6O7+ian4LGTzG1jydZr37vL+c5j3R3j1y9n8+vz/9/n/
        dpr3L2bzwNH7t8r7KWLzNWvz3OX9Nmv05Ov94+v9O2/0PXH0OG304On9MWjz2OP9K2PzKmPz2uT9JmDz
        rsT6qsD6f6H4d5z3SHn1wdH7IFzyHlrycJb3U4H1JF7z9fj+Yoz2m7b51eD9/f7/v9D76vD++fr/W4b2
        3+f9I17y1+H909/8PHD04Oj9LWXz0N38tsr7lbH5mLP59vj+aJD2QXT0b5b3SXn1QHP0bZT3qcD65ez+
        JV/zOm/0usz7nbf5gKL4ZI32sMy/GQAAAAlwSFlzAAALDAAACwwBP0AiyAAAHc1JREFUeF7t3Wd3VGUX
        h/E7bdIgRkpQqiEkoFEjUUECIprQm6BSLNjr9/8AzyT+w0rI3Ofsu8yz13Ku39s5e19r5U3WaTMBAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/xdDwyOjY53xicnJianO2OjI8JA+6DO6+qDP6OqDfpret39mco+Z
        12andUCf0N1Etzan7usHDiq1x6HDczqoD+i+RLcin+6RN95UJOLosSM6tCq6r6BbhVN3+vgJ7W9w8tRb
        Orwauj3QLebUnT+9oN0tFs7Ma6QKuhF0i3h1F5e012BpUUMV0I2jm8+pOz9yVktNzr2tuVJ0G9HN5NV9
        Z1kbzd59T6NF6Lahm8Or+/641iVY+UDDBei2o5vOrXtey5KsFpfpWtBN5dX9MKvbLX+kBZno2tBN49X9
        2HCxvbcLF7UiC10ruim8utM9nkOy+uSSlmSga0fXzqu7dllLsnSuaE0yuinoWnl1w6dakemq1iSjm4Su
        kVf3My3Idk2LEtFNRNfEq7uYdP+3l7Ofa1USuqnoWnh1wxcaL7CsVUnoJqNr4NWd1XCRWS1LQDcD3VZe
        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
        QCzBRQAAAABJRU5ErkJggg==
</value>
  </data>
</root>